<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chen.dao.UserDao">

    <resultMap id="userMap" type="com.chen.entity.User">
        <id column="id" property="id"></id>
        <result column="user_name" property="username"></result>
        <result column="password" property="password"></result>
    </resultMap>

    <sql id="sql">
        id,user_name,password
    </sql>


    <select id="select" resultMap="userMap">
        select <include refid="sql"></include>
        from user
    </select>


    <select id="selectById" resultMap="userMap">
        select <include refid="sql"></include>
        from user where id = #{id}
    </select>

    <select id="selectByIdAndUsername" resultMap="userMap">
        select <include refid="sql"></include>
        from user where id = #{id} and username = #{username}
    </select>

    <select id="selectByUser" parameterType="com.chen.entity.User" resultMap="userMap">
        select <include refid="sql"></include>
        from user where id = #{id} and username = #{username}
    </select>

    <select id="selectByMap" resultMap="userMap">
        select <include refid="sql"></include>
        from user where password = #{password} and username = #{username}
    </select>

    <select id="selectByUsername" resultMap="userMap">
        select <include refid="sql"></include>
        from user where username like '%${username1}%'
    </select>


    <insert id="insert">
        insert into user (id,username,password)values(#{id},#{username},#{password})
    </insert>


    <delete id="delete">
        delete from user where id = #{id}
    </delete>


    <select id="selectByAllConditions" resultMap="userMap">
        select <include refid="sql"></include>
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and user_name = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>

        and 1=1
    </select>

    <update id="update">
        update user
        <set>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="username != null and username != ''">
                user_name = #{username},
            </if>
        </set>
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </update>

    <select id="selectByIds" resultMap="userMap">
        select <include refid="sql"></include>
        from user where id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <update id="updateByIds">
        <foreach collection="userList" separator=";" close=")" open="(" item="user">
            update user
            <set>
                <if test="user.password != null and user.password != ''">
                    password = #{user.password},
                </if>
                <if test="user.username != null and user.username != ''">
                    user_name = #{user.username},
                </if>
            </set>
            where id = #{user.id}
        </foreach>
    </update>


    <insert id="insertBinds">
        insert into user (id,user_name,password) values
        <foreach collection="userList" item="user" separator=",">
            (#{user.id},#{user.username},#{user.password})
        </foreach>

    </insert>
</mapper>